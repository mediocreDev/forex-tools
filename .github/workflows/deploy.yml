name: Deploy project to VPS

on:
  pull_request:
    types: [closed]
    branches:
      - dev
      - uat
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🔧 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🌍 Set environment name
        id: vars
        run: |
          if [[ "${GITHUB_REF_NAME}" == "dev" ]]; then
            echo "ENV_NAME=development" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF_NAME}" == "uat" ]]; then
            echo "ENV_NAME=uat" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF_NAME}" == "master" ]]; then
            echo "ENV_NAME=production" >> $GITHUB_OUTPUT
          else
            echo "ENV_NAME=unknown" >> $GITHUB_OUTPUT
          fi

      - name: 🏗️ Build Vue app
        run: |
          echo "Building for ${{ steps.vars.outputs.ENV_NAME }} environment..."
          if [[ "${GITHUB_REF_NAME}" == "dev" ]]; then
            npm run build:dev
          elif [[ "${GITHUB_REF_NAME}" == "uat" ]]; then
            npm run build:uat
          elif [[ "${GITHUB_REF_NAME}" == "master" ]]; then
            npm run build
          else
            echo "❌ Unsupported branch: ${GITHUB_REF_NAME}"
            exit 1
          fi

      - name: 📋 Check build outputs
        run: |
          echo "📂 Vue dist/"
          ls -lah dist || echo "❌ dist/ missing"
          echo "📂 Proxy backend"
          ls -lah proxy || echo "❌ proxy/ missing"
          echo "📄 package files"
          ls -l package.json package-lock.json || echo "❌ package files missing"
      
      - name: 🧹 Clean remote folder before deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: 1993
          script: |
            rm -rf /var/www/forextool-${{ github.ref_name }}/*

      - name: 📤 Upload project to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: 1993
          source: "dist, proxy, package.json"
          target: "/var/www/forextool-${{ github.ref_name }}"

      - name: 🚀 Run post-deploy commands (install, PM2, nginx)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: 1993
          script: |
            set -e
            cd /var/www/forextool-${{ github.ref_name }}

            echo "📦 Installing dependencies..."
            npm install

            echo "📥 Installing PM2 if needed..."
            command -v pm2 || sudo npm install -g pm2

            echo "🔌 Mapping branch to port..."
            if [[ "${{ github.ref_name }}" == "dev" ]]; then
              PORT=3001
            elif [[ "${{ github.ref_name }}" == "uat" ]]; then
              PORT=3002
            elif [[ "${{ github.ref_name }}" == "master" ]]; then
              PORT=3003
            else
              PORT=3999
            fi
            echo "✅ Selected PORT: $PORT"

            echo "🧹 Cleaning previous PM2 process..."
            pm2 stop forextool-${{ github.ref_name }}-api || true
            pm2 delete forextool-${{ github.ref_name }}-api || true

            echo "🚀 Starting Express backend on PORT=$PORT..."
            PORT=$PORT pm2 start proxy/index.js \
              --name forextool-${{ github.ref_name }}-api \
              --update-env

            echo "💾 Saving PM2 state..."
            pm2 save

            echo "♻️ Reloading NGINX..."
            sudo systemctl reload nginx

            echo "🧪 PM2 Process List:"
            pm2 list

            echo "📜 Last 20 log lines:"
            pm2 logs forextool-${{ github.ref_name }}-api --lines 20 --nostream

            echo "📡 Health check on http://localhost:$PORT/health..."
            curl -s http://localhost:$PORT/health || echo "❌ Express not responding on port $PORT"
